Elm.Array = Elm.Array || {};
Elm.Array.make = function (_elm) {
   "use strict";
   _elm.Array = _elm.Array || {};
   if (_elm.Array.values)
   return _elm.Array.values;
   var _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _E = _N.Error.make(_elm),
   _J = _N.JavaScript.make(_elm),
   $moduleName = "Array";
   var Basics = Elm.Basics.make(_elm);
   var Color = Elm.Color.make(_elm);
   var Graphics = Graphics || {};
   Graphics.Collage = Elm.Graphics.Collage.make(_elm);
   var Graphics = Graphics || {};
   Graphics.Element = Elm.Graphics.Element.make(_elm);
   var List = Elm.List.make(_elm);
   var Maybe = Elm.Maybe.make(_elm);
   var Native = Native || {};
   Native.Array = Elm.Native.Array.make(_elm);
   var Native = Native || {};
   Native.Ports = Elm.Native.Ports.make(_elm);
   var Signal = Elm.Signal.make(_elm);
   var String = Elm.String.make(_elm);
   var Text = Elm.Text.make(_elm);
   var Time = Elm.Time.make(_elm);
   var _op = {};
   var concat = Native.Array.concat;
   var length = Native.Array.length;
   var slice = Native.Array.slice;
   var set = Native.Array.set;
   var get = Native.Array.get;
   var push = Native.Array.push;
   var empty = Native.Array.empty;
   var foldr = Native.Array.foldr;
   var foldl = Native.Array.foldl;
   var map = Native.Array.map;
   var toList = Native.Array.toList;
   var fromList = A2(List.foldl,
   Native.Array.push,
   Native.Array.empty);
   var Array = {ctor: "Array"};
   _elm.Array.values = {_op: _op
                       ,fromList: fromList
                       ,toList: toList
                       ,map: map
                       ,foldl: foldl
                       ,foldr: foldr
                       ,empty: empty
                       ,push: push
                       ,get: get
                       ,set: set
                       ,slice: slice
                       ,length: length
                       ,concat: concat
                       ,Array: Array};
   return _elm.Array.values;
};